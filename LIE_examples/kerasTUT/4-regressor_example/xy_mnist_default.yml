---

loss:
  # It is a list of loss functions, one for each model output.
  # The MNIST example only has one output, named "labels".
  - target: y
    name: mean_squared_error # categorical_crossentropy

train:
  # Let's include checksums for all of the data we download.
  data:
    - xy:
        x:
          checksum:
          path: "/Users/Natsume/Downloads/data_for_all/4_regressor_example_data/x_train"
        y:
          checksum:
          path: "/Users/Natsume/Downloads/data_for_all/4_regressor_example_data/y_train"

  provider:
    batch_size: # empty or None is default 32 samples as a batch
    num_batches: 1
  log: /Users/Natsume/Downloads/temp_folders/4_regressor_example/xy-mnist-log # remember if don't set log, your model won't build on previous runs

  # How many epochs to train for.
  epochs:
    number: 2
    mode: additional
  stop_when:
    epochs: 3 # null or infinite : to train forever
    elapsed:
      minutes: 10
      hours: 0
      days: 0
      clock: all # (time spend on all things) or all | train | validate | batch
    mode: additional # additional | total, if set total, then elapsed above define total training time in history added
  weights: # the folders below are prepared automatically?
    initial: /Users/Natsume/Downloads/temp_folders/4_regressor_example/xy.mnist.best.valid.w
    best: /Users/Natsume/Downloads/temp_folders/4_regressor_example/xy.mnist.best.train.w
    last: /Users/Natsume/Downloads/temp_folders/4_regressor_example/xy.mnist.last.w



validate: &validate
  data:
    - xy:
        x:
          url:
          checksum:
          path: "/Users/Natsume/Downloads/data_for_all/4_regressor_example_data/x_valid"
        y:
          url:
          checksum:
          path: "/Users/Natsume/Downloads/data_for_all/4_regressor_example_data/y_valid"

  provider:
    num_batches: 1
  weights: /Users/Natsume/Downloads/temp_folders/4_regressor_example/xy.mnist.best.valid.w

test: *validate

evaluate:
  <<: *validate

  # Use the entire testing set for evaluation.
  provider:
    num_batches: null

  # Where do we want to store the output file?
  # Here, we are just storing it as a Python pickle.
  destination: /Users/Natsume/Downloads/temp_folders/4_regressor_example/xy.mnist.results.pkl

  # This is a list of post-processing hooks. Here, we want to produce the
  # digit-by-digit accuracy table (just called "mnist").
  # hooks:
  #   - mnist
...
